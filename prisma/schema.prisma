datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model roles {
    id Int @id @default(autoincrement())

    name String
    code String @unique

    users users[]

    created_at DateTime @default(now())
    updated_at DateTime? @updatedAt
    deleted_at DateTime?
}

model users {
    id Int @id @default(autoincrement())

    email String @unique
    password String
    active Boolean @default(true)
    
    role_id Int
    role roles @relation(fields: [role_id], references: [id])

    profile profiles?

    created_at DateTime @default(now())
    updated_at DateTime? @updatedAt
    deleted_at DateTime?
}

model profiles {
    id Int @id @default(autoincrement())

    first_name String?
    last_name String?
    email String @unique
    address String?
    gender String?
    age Int?

    user_id Int @unique
    user users @relation(fields: [user_id], references: [id])

    from_box_chats box_chats[] @relation("from_profile")
    to_box_chats box_chats[] @relation("to_profile")
    group_chats group_chats[]
    profile_group_chat profile_group_chats[]

    created_at DateTime @default(now())
    updated_at DateTime? @updatedAt
    deleted_at DateTime?
}

model box_chats {
    id Int @id @default(autoincrement())

    from_id Int
    to_id Int
    
    from_profile profiles @relation("from_profile",fields: [from_id], references: [id])
    to_profile profiles @relation("to_profile",fields: [to_id], references: [id])

    created_at DateTime @default(now())
    updated_at DateTime? @updatedAt
    deleted_at DateTime?

    @@unique([from_id, to_id])
}

model group_chats {
    id Int @id @default(autoincrement())

    create_id Int

    profile profiles @relation(fields: [create_id], references: [id])
    profile_group_chat profile_group_chats[]

    created_at DateTime @default(now())
    updated_at DateTime? @updatedAt
    deleted_at DateTime?
}

model profile_group_chats {
    id Int @id @default(autoincrement())

    profile_id Int
    group_chat_id Int

    profile profiles @relation(fields: [profile_id], references: [id])
    group_chat group_chats @relation(fields: [group_chat_id], references: [id])

    created_at DateTime @default(now())
    updated_at DateTime? @updatedAt
    deleted_at DateTime?

    @@unique([profile_id, group_chat_id])
}